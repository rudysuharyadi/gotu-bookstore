// Code generated by mockery v2.42.0. DO NOT EDIT.

package transactions

import (
	contractstransactions "gotu-bookstore/cmd/gotu-bookstore/contracts/transactions"

	mock "github.com/stretchr/testify/mock"
)

// GetTransactionDetailsServiceInterface is an autogenerated mock type for the GetTransactionDetailsServiceInterface type
type GetTransactionDetailsServiceInterface struct {
	mock.Mock
}

type GetTransactionDetailsServiceInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *GetTransactionDetailsServiceInterface) EXPECT() *GetTransactionDetailsServiceInterface_Expecter {
	return &GetTransactionDetailsServiceInterface_Expecter{mock: &_m.Mock}
}

// ProcessingGetTransactionDetails provides a mock function with given fields: request
func (_m *GetTransactionDetailsServiceInterface) ProcessingGetTransactionDetails(request contractstransactions.GetTransactionDetailsRequest) (*contractstransactions.GetTransactionDetailsResponse, error) {
	ret := _m.Called(request)

	if len(ret) == 0 {
		panic("no return value specified for ProcessingGetTransactionDetails")
	}

	var r0 *contractstransactions.GetTransactionDetailsResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(contractstransactions.GetTransactionDetailsRequest) (*contractstransactions.GetTransactionDetailsResponse, error)); ok {
		return rf(request)
	}
	if rf, ok := ret.Get(0).(func(contractstransactions.GetTransactionDetailsRequest) *contractstransactions.GetTransactionDetailsResponse); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*contractstransactions.GetTransactionDetailsResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(contractstransactions.GetTransactionDetailsRequest) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetTransactionDetailsServiceInterface_ProcessingGetTransactionDetails_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ProcessingGetTransactionDetails'
type GetTransactionDetailsServiceInterface_ProcessingGetTransactionDetails_Call struct {
	*mock.Call
}

// ProcessingGetTransactionDetails is a helper method to define mock.On call
//   - request contractstransactions.GetTransactionDetailsRequest
func (_e *GetTransactionDetailsServiceInterface_Expecter) ProcessingGetTransactionDetails(request interface{}) *GetTransactionDetailsServiceInterface_ProcessingGetTransactionDetails_Call {
	return &GetTransactionDetailsServiceInterface_ProcessingGetTransactionDetails_Call{Call: _e.mock.On("ProcessingGetTransactionDetails", request)}
}

func (_c *GetTransactionDetailsServiceInterface_ProcessingGetTransactionDetails_Call) Run(run func(request contractstransactions.GetTransactionDetailsRequest)) *GetTransactionDetailsServiceInterface_ProcessingGetTransactionDetails_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(contractstransactions.GetTransactionDetailsRequest))
	})
	return _c
}

func (_c *GetTransactionDetailsServiceInterface_ProcessingGetTransactionDetails_Call) Return(_a0 *contractstransactions.GetTransactionDetailsResponse, _a1 error) *GetTransactionDetailsServiceInterface_ProcessingGetTransactionDetails_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *GetTransactionDetailsServiceInterface_ProcessingGetTransactionDetails_Call) RunAndReturn(run func(contractstransactions.GetTransactionDetailsRequest) (*contractstransactions.GetTransactionDetailsResponse, error)) *GetTransactionDetailsServiceInterface_ProcessingGetTransactionDetails_Call {
	_c.Call.Return(run)
	return _c
}

// NewGetTransactionDetailsServiceInterface creates a new instance of GetTransactionDetailsServiceInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewGetTransactionDetailsServiceInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *GetTransactionDetailsServiceInterface {
	mock := &GetTransactionDetailsServiceInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
