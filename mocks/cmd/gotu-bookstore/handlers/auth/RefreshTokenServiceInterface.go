// Code generated by mockery v2.42.0. DO NOT EDIT.

package auth

import (
	contractsauth "gotu-bookstore/cmd/gotu-bookstore/contracts/auth"

	mock "github.com/stretchr/testify/mock"
)

// RefreshTokenServiceInterface is an autogenerated mock type for the RefreshTokenServiceInterface type
type RefreshTokenServiceInterface struct {
	mock.Mock
}

type RefreshTokenServiceInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *RefreshTokenServiceInterface) EXPECT() *RefreshTokenServiceInterface_Expecter {
	return &RefreshTokenServiceInterface_Expecter{mock: &_m.Mock}
}

// ProcessingRefreshToken provides a mock function with given fields: request
func (_m *RefreshTokenServiceInterface) ProcessingRefreshToken(request contractsauth.RefreshTokenRequest) (*contractsauth.RefreshTokenResponse, error) {
	ret := _m.Called(request)

	if len(ret) == 0 {
		panic("no return value specified for ProcessingRefreshToken")
	}

	var r0 *contractsauth.RefreshTokenResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(contractsauth.RefreshTokenRequest) (*contractsauth.RefreshTokenResponse, error)); ok {
		return rf(request)
	}
	if rf, ok := ret.Get(0).(func(contractsauth.RefreshTokenRequest) *contractsauth.RefreshTokenResponse); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*contractsauth.RefreshTokenResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(contractsauth.RefreshTokenRequest) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RefreshTokenServiceInterface_ProcessingRefreshToken_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ProcessingRefreshToken'
type RefreshTokenServiceInterface_ProcessingRefreshToken_Call struct {
	*mock.Call
}

// ProcessingRefreshToken is a helper method to define mock.On call
//   - request contractsauth.RefreshTokenRequest
func (_e *RefreshTokenServiceInterface_Expecter) ProcessingRefreshToken(request interface{}) *RefreshTokenServiceInterface_ProcessingRefreshToken_Call {
	return &RefreshTokenServiceInterface_ProcessingRefreshToken_Call{Call: _e.mock.On("ProcessingRefreshToken", request)}
}

func (_c *RefreshTokenServiceInterface_ProcessingRefreshToken_Call) Run(run func(request contractsauth.RefreshTokenRequest)) *RefreshTokenServiceInterface_ProcessingRefreshToken_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(contractsauth.RefreshTokenRequest))
	})
	return _c
}

func (_c *RefreshTokenServiceInterface_ProcessingRefreshToken_Call) Return(_a0 *contractsauth.RefreshTokenResponse, _a1 error) *RefreshTokenServiceInterface_ProcessingRefreshToken_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *RefreshTokenServiceInterface_ProcessingRefreshToken_Call) RunAndReturn(run func(contractsauth.RefreshTokenRequest) (*contractsauth.RefreshTokenResponse, error)) *RefreshTokenServiceInterface_ProcessingRefreshToken_Call {
	_c.Call.Return(run)
	return _c
}

// NewRefreshTokenServiceInterface creates a new instance of RefreshTokenServiceInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewRefreshTokenServiceInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *RefreshTokenServiceInterface {
	mock := &RefreshTokenServiceInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
