// Code generated by mockery v2.42.0. DO NOT EDIT.

package auth

import mock "github.com/stretchr/testify/mock"

// LogoutServiceInterface is an autogenerated mock type for the LogoutServiceInterface type
type LogoutServiceInterface struct {
	mock.Mock
}

type LogoutServiceInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *LogoutServiceInterface) EXPECT() *LogoutServiceInterface_Expecter {
	return &LogoutServiceInterface_Expecter{mock: &_m.Mock}
}

// ProcessingLogout provides a mock function with given fields:
func (_m *LogoutServiceInterface) ProcessingLogout() error {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for ProcessingLogout")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// LogoutServiceInterface_ProcessingLogout_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ProcessingLogout'
type LogoutServiceInterface_ProcessingLogout_Call struct {
	*mock.Call
}

// ProcessingLogout is a helper method to define mock.On call
func (_e *LogoutServiceInterface_Expecter) ProcessingLogout() *LogoutServiceInterface_ProcessingLogout_Call {
	return &LogoutServiceInterface_ProcessingLogout_Call{Call: _e.mock.On("ProcessingLogout")}
}

func (_c *LogoutServiceInterface_ProcessingLogout_Call) Run(run func()) *LogoutServiceInterface_ProcessingLogout_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *LogoutServiceInterface_ProcessingLogout_Call) Return(_a0 error) *LogoutServiceInterface_ProcessingLogout_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *LogoutServiceInterface_ProcessingLogout_Call) RunAndReturn(run func() error) *LogoutServiceInterface_ProcessingLogout_Call {
	_c.Call.Return(run)
	return _c
}

// NewLogoutServiceInterface creates a new instance of LogoutServiceInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewLogoutServiceInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *LogoutServiceInterface {
	mock := &LogoutServiceInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
